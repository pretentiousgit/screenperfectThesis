
How to design software that is actually desired? What constitutes a good design, or a bad one? What makes someone want to use a technology, and what makes that technology straightforward for a user? These are huge questions, which are only solved within a given context. The "psychopathy" of everyday physical objects tends to be limited by physics, but the psychopathy of a piece of software can be endless \parencite{norman}. Expanded to a system where it is difficult to install or maintain digital works, this sharply limits collectability. One response to this has been to upload interactive work to the internet, but this causes the work to be decontextualised to a site of the user's choice, rather than the context of a gallery or exhibition proper.

In this paper, I address these concerns by developing a framework based initially on artist-led technical collaboration, followed by the presentation of software developed through that collaboration to a community of users, followed by a system of hardware to display works based on the artist-led software engine. I wanted to pursue a repeatable system for artistic collaboration that would provide a means of entry for new users who are skilled in one capacity, but not another. In the case of this software, I chose to collaborate with video artists, and to produce a web technology application that would serve as a game engine for a dual-screen branched video narrative, remeniscent of FMV games from the early 1990s. 

screenPerfect is distinct from pre-existing game engines, written to encourage video artists to use their own skillset to explore what is possible in an interactive experience. screenPerfect's game-side interaction mechanics emphasize a classic branched narrative structure similar to that of FMV games, which can then be extended by any programmer to encompass new features. The editing and interaction mechanics are both straightforward to use and not designed to be altered by artists. This means that artists have a consistent environment in which to place their work, which will reliably showcase that work without the need to learn how to program - an entirely new creative skillset – in order to do so. The result is an open technology work that can be freely reproduced and extended.

This project has several parts which will be explained separately. The first part of the project is an application to build branched narratives out of video files, coded in javascript on the Node.JS framework for distribution via common internet technologies. This portion of the research is based on an artist collaboration with Hannah Epstein and the OCADu game::play Lab, run by Prof. Emma Westecott. This practice follows structural political resistance through open technology - implicit control systems - and how an artistic practice can be expanded to a pragmatic tool which is not proscriptive in its final use case. Users can acccess the engine, developed through one specific user's design practice, to design new things.

The second part of this paper addresses how to perform user testing via a game jam format, a type of design charette in which users are given access to tools and asked to produce art with them. In this section, I describe how to orchestrate a game jam to test a new format of software through user feedback, and discuss the implications of the supportive incubator scenario with regards to H\'{e}l\`{e}ne Cixous' "Laugh of the Medusa," and in particular her requirement that women write themselves into being. The software is designed to permit participants to tell whatever stories they like, publicly. The concept of a game jam is that participants produce work with a pre-established audience, which legitimizes that work for public display. I also discuss that this method expands community ties for local artists working in a medium that frequently demands more collaboration than traditional, less dynamic art works.

In the third part of this paper, I present a method to display time-based software works via use of the not-for-profit Raspberry Pi platform, a platform designed to promote learning and experimentation while being uniquely suited to works that require permanent installation of notoriously fragile electronic resources. 

In conclusion, I argue that we need technology to belong to its users, instead of pursuing an exclusive reliance on mass network technologies. I feel that there has always been room for the technical in art, and while good technology fades into the background to leave only the artwork on display, the technology we choose to use provides the frame of what can be pursued.

This thesis consists of a design method to extend an artist-led technical collaboration into a working digital interaction platform. 

This platform has been developed out of artist-led technical collaboration, then tested with community engagement with the feminist group Dames Making Games Toronto. The theoretical work to support the project makes use of Hélène Cixous' "Laugh of the Medusa" and the idea that imposter syndrome can be subverted by providing simplified but capable tools to allow trained individuals to rely on their existing skills base, rather than requiring new training to use contemporary technology. 

In the third phase, I describe how to build a hardware system based on the not-for-profit technology of the Raspberry Pi for display and distribution to display contexts with limited resources. The use of a prolific not-for-profit platform permits artists control over the context of their work, while allowing use of contemporary software capabilities in developing what that work might be.

The project examines what it means for technology to be open, and how that open technology might be commodified in support of the arts.